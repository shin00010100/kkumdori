package com.kkumdori.shop.login;

import org.springframework.security.authentication.AbstractAuthenticationToken;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.web.authentication.WebAuthenticationDetails;
import java.util.Collection;

public class JwtAuthenticationToken extends AbstractAuthenticationToken {

    private static final long serialVersionUID = 1L;

    private final Object principal;
    private Object credentials;
    private WebAuthenticationDetails details;  // WebAuthenticationDetails 객체 추가

    // 인증 전 (권한 없음)
    public JwtAuthenticationToken(Object principal, Object credentials) {
        super(null);  // 인증되지 않은 상태로 생성
        this.principal = principal;
        this.credentials = credentials;
        setAuthenticated(false);  // 인증되지 않은 상태
    }

    // 인증 후 (권한 포함)
    public JwtAuthenticationToken(Object principal, Object credentials, Collection<? extends GrantedAuthority> authorities) {
        super(authorities);  // 권한 포함
        this.principal = principal;
        this.credentials = credentials;
        setAuthenticated(true);  // 인증된 상태로 설정
    }

    @Override
    public Object getCredentials() {
        return credentials;
    }

    @Override
    public Object getPrincipal() {
        return principal;
    }

    @Override
    public void setAuthenticated(boolean isAuthenticated) throws IllegalArgumentException {
        if (!isAuthenticated) {
            super.setAuthenticated(false);  // 인증되지 않은 상태
        } else {
            throw new IllegalArgumentException("Cannot set this token to trusted - use constructor with granted authorities.");
        }
    }

    // setDetails 메서드 수정: WebAuthenticationDetails 객체를 저장하도록
    @Override
    public void setDetails(WebAuthenticationDetails details) {
        this.details = details;  // 세부 정보 저장
    }

    @Override
    public WebAuthenticationDetails getDetails() {
        return this.details;  // 세부 정보 반환
    }
}
